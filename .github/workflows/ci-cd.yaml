name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Or your main development branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write # Add permissions for packages:write to push to GHCR

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # --- Setup for Multi-Architecture Builds ---
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3 # Use the latest version

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Use the latest version

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- Frontend (Vue.js) Build and Push (Multi-arch) ---
      - name: Build and Push Frontend Docker Image (Multi-arch)
        uses: docker/build-push-action@v5
        with:
          context: ./frontend # Path to your frontend Dockerfile
          platforms: linux/amd64,linux/arm64 # Specify both x86 (amd64) and ARM (arm64)
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/stockifyai-frontend:latest
          # Optional: add more specific tags like: ghcr.io/${{ github.repository_owner }}/stockifyai-frontend:${{ github.sha }}

      # --- Backend (Java) Build and Push (Multi-arch) ---
      - name: Build and Push Backend Docker Image (Multi-arch)
        uses: docker/build-push-action@v5
        with:
          context: ./backend # Path to your backend Dockerfile
          platforms: linux/amd64,linux/arm64 # Specify both x86 (amd64) and ARM (arm64)
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/stockifyai-backend:latest
          # Optional: add more specific tags like: ghcr.io/${{ github.repository_owner }}/stockifyai-backend:${{ github.sha }}

      # ... (Your existing deployment steps, if any) ...
      # - name: Deploy Application
      #   run: |
      #     echo "Deployment steps go here..."

      # --- Deployment (Example - this will vary greatly based on your setup) ---
      # This is a placeholder. You might use actions for deploying to Kubernetes,
      # cloud providers (AWS, Azure, GCP), etc.
      # - name: Deploy Application
      #  run: |
       #   echo "Deployment steps go here..."
          # Example: kubectl apply -f kubernetes/deployment.yaml
          # Example: aws ecs update-service --cluster my-cluster --service my-service --force-new-deployment